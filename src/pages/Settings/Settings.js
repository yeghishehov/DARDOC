import { useState, useMemo, } from "react";
import DataTable from "react-data-table-component";
import Typography from "@material-ui/core/Typography";
import TextField from "@material-ui/core/TextField";
import Button from "@material-ui/core/Button";
import Dialog from "@material-ui/core/Dialog";
import DialogActions from "@material-ui/core/DialogActions";
import DialogContent from "@material-ui/core/DialogContent";
import DialogTitle from "@material-ui/core/DialogTitle";
import useStyles, { customStyles } from "./Settings.styles";

const columnOptionsCities = [ "ID", "City", "Country" ];

const columnOptionsCategories = [ "Category ID", "Category Abbreviation", "Description" ];

const dataCities = [
  { ID: 1, City: 'Abu Dhabi', Country: 'UAE', },
  { ID: 2, City: 'Dubai', Country: 'UAE', },
  { ID: 3, City: 'Sharjah', Country: 'UAE', },
];

const dataCategories = [
  { 'Category ID': 100, 'Category Abbreviation': 'LAB', Description: 'Diagnostic Laboratory', },
  { 'Category ID': 101, 'Category Abbreviation': 'HHC', Description: 'Home Healthcare', },
  { 'Category ID': 102, 'Category Abbreviation': 'PHA ', Description: 'Pharmacy', },
];

export default function UsersAlerts() {
  const classes = useStyles();
  const [editCity, setEditCity] = useState(false);
  const [editCategory, setEditCategory] = useState(false);
  const [form, setForm] = useState({
    Name: '', Address: '', Area: '', City: '', 'P.O.Box': '', Web: '', Email: '', Tel: '',
  });

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const columnsCities = useMemo(() =>
    columnOptionsCities.map((columnOptionItem) => ({
      name: columnOptionItem,
      selector: columnOptionItem,
    }))
  );

  const columnsCategories = useMemo(() =>
    columnOptionsCategories.map((columnOptionItem) => ({
      name: columnOptionItem,
      selector: columnOptionItem,
    }))
  );

  return (
    <>
      <Typography align="left" variant="h4" className={classes.header}>
        DarDoc Settings
      </Typography>

      <div className={classes.row}>
        <div className={classes.container}>
          <Typography paragraph>
            Define DarDoc details that need to be used in any
            offical document that will be generated by the system
          </Typography>
          {Object.keys(form).map((key) => (
            <label className={classes.label} key={key}>
              {key}
              <TextField
                variant="outlined"
                value={form[key]}
                onChange={handleChange}
                name={key}
                size="small"
              />
            </label>
          ))}
        </div>
        <div>
          <DataTable
            keyField="ID"
            title="Define Cities"
            columns={columnsCities}
            data={dataCities}
            highlightOnHover
            customStyles={customStyles}
            onRowClicked={() => setEditCity(true)}
            pagination
          />
        </div>
      </div>

      <div>
        <DataTable
          keyField="Category ID"
          title="Categories Of Business Partners"
          columns={columnsCategories}
          data={dataCategories}
          highlightOnHover
          customStyles={customStyles}
          onRowClicked={() => setEditCategory(true)}
          pagination
        />
      </div>

      <Dialog
        maxWidth="xs"
        fullWidth
        open={editCity}
        onClose={() => setEditCity(false)}
      >
        <DialogContent>
          <label className={classes.label}>
            City
            <TextField
              variant="outlined"
              // value={}
              // onChange={}
              name="City"
              size="small"
            />
          </label>
          <label className={classes.label}>
            Country
            <TextField
              variant="outlined"
              // value={}
              // onChange={}
              name="Country"
              size="small"
            />
          </label>
        </DialogContent>

        <DialogActions>
          <Button onClick={() => setEditCity(false)} variant="outlined">
            Add
          </Button>
          <Button onClick={() => setEditCity(false)} variant="outlined">
            Update
          </Button>
          <Button onClick={() => setEditCity(false)} variant="outlined">
            Delete
          </Button>
          <Button onClick={() => setEditCity(false)} variant="outlined">
            New
          </Button>
        </DialogActions>
      </Dialog>

      <Dialog
        maxWidth="xs"
        fullWidth
        open={editCategory}
        onClose={() => setEditCategory(false)}
      >
        <DialogTitle align="center">Categories Of Business Partners</DialogTitle>
        <DialogContent>
          <label className={classes.label}>
            Category
            <TextField
              variant="outlined"
              // value={}
              // onChange={}
              name="Country"
              size="small"
            />
          </label>
        </DialogContent>

        <DialogActions>
          <Button onClick={() => setEditCategory(false)} variant="outlined">
            Add
          </Button>
          <Button onClick={() => setEditCategory(false)} variant="outlined">
            Update
          </Button>
          <Button onClick={() => setEditCategory(false)} variant="outlined">
            Delete
          </Button>
          <Button onClick={() => setEditCategory(false)} variant="outlined">
            New
          </Button>
        </DialogActions>
      </Dialog>
    </>
  );
}
